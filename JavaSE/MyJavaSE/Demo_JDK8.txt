
class Demo_JDK8 {
//1* 接口中可以定义有方法体的方法,如果是非静态,必须用default修饰	
//2* 如果是静态的就不用了
//3* 局部内部类在访问他所在方法中的局部变量必须用final修饰,为什么?
//因为当调用这个方法时,局部变量如果没有用final修饰,他的生命周期和方法的生命周期是一样的,当方法弹栈,
//这个局部变量也会消失,那么如果局部内部类对象还没有马上消失想用这个局部变量,就没有了,如果用final修饰会在类加载的时候进入常量池,
//即使方法弹栈,常量池的常量还在,也可以继续使用

	public static void main(String[] args){
		
		Demo d = new Demo();
		d.print();

		Inner.method();

		System.out.println("==================");

		d.run();


	}
}

interface Inner {

	public default void print(){
	  System.out.println(" default 定义有方法体的方法 ");
	}

	public static void method(){
		System.out.println(" static method ");
	}
}

class Demo implements Inner {
	
  public void run(){
		int num =10;
		class Inter {
			public void fun(){ 
				System.out.println("jdk8 局部内部类引用成员变量可以省略final："+num);
			}
		}

		Inter i = new Inter();
		i.fun();
  }

}